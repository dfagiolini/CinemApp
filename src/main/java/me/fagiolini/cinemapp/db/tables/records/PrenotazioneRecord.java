/*
 * This file is generated by jOOQ.
 */
package me.fagiolini.cinemapp.db.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDate;

import me.fagiolini.cinemapp.db.tables.Prenotazione;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "prenotazione",
    schema = "cinemapp",
    uniqueConstraints = {
        @UniqueConstraint(name = "prenotazione_utente_id_proiezione_id_key", columnNames = { "utente_id", "proiezione_id" })
    }
)
public class PrenotazioneRecord extends UpdatableRecordImpl<PrenotazioneRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cinemapp.prenotazione.id</code>.
     */
    public PrenotazioneRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cinemapp.prenotazione.numero_biglietti</code>.
     */
    public PrenotazioneRecord setNumeroBiglietti(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.numero_biglietti</code>.
     */
    @Column(name = "numero_biglietti", nullable = false)
    @NotNull
    public Integer getNumeroBiglietti() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>cinemapp.prenotazione.data_prenotazione</code>.
     */
    public PrenotazioneRecord setDataPrenotazione(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.data_prenotazione</code>.
     */
    @Column(name = "data_prenotazione")
    public LocalDate getDataPrenotazione() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>cinemapp.prenotazione.proiezione_id</code>.
     */
    public PrenotazioneRecord setProiezioneId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.proiezione_id</code>.
     */
    @Column(name = "proiezione_id")
    public Long getProiezioneId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cinemapp.prenotazione.utente_id</code>.
     */
    public PrenotazioneRecord setUtenteId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.utente_id</code>.
     */
    @Column(name = "utente_id")
    public Long getUtenteId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrenotazioneRecord
     */
    public PrenotazioneRecord() {
        super(Prenotazione.PRENOTAZIONE);
    }

    /**
     * Create a detached, initialised PrenotazioneRecord
     */
    public PrenotazioneRecord(Long id, Integer numeroBiglietti, LocalDate dataPrenotazione, Long proiezioneId, Long utenteId) {
        super(Prenotazione.PRENOTAZIONE);

        setId(id);
        setNumeroBiglietti(numeroBiglietti);
        setDataPrenotazione(dataPrenotazione);
        setProiezioneId(proiezioneId);
        setUtenteId(utenteId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PrenotazioneRecord
     */
    public PrenotazioneRecord(me.fagiolini.cinemapp.db.tables.pojos.Prenotazione value) {
        super(Prenotazione.PRENOTAZIONE);

        if (value != null) {
            setId(value.getId());
            setNumeroBiglietti(value.getNumeroBiglietti());
            setDataPrenotazione(value.getDataPrenotazione());
            setProiezioneId(value.getProiezioneId());
            setUtenteId(value.getUtenteId());
            resetChangedOnNotNull();
        }
    }
}
