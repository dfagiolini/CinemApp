/*
 * This file is generated by jOOQ.
 */
package me.fagiolini.cinemapp.db.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "prenotazione",
    schema = "cinemapp",
    uniqueConstraints = {
        @UniqueConstraint(name = "prenotazione_utente_id_proiezione_id_key", columnNames = { "utente_id", "proiezione_id" })
    }
)
public class Prenotazione implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Integer numeroBiglietti;
    private LocalDate dataPrenotazione;
    private Long proiezioneId;
    private Long utenteId;

    public Prenotazione() {}

    public Prenotazione(Prenotazione value) {
        this.id = value.id;
        this.numeroBiglietti = value.numeroBiglietti;
        this.dataPrenotazione = value.dataPrenotazione;
        this.proiezioneId = value.proiezioneId;
        this.utenteId = value.utenteId;
    }

    public Prenotazione(
        Long id,
        Integer numeroBiglietti,
        LocalDate dataPrenotazione,
        Long proiezioneId,
        Long utenteId
    ) {
        this.id = id;
        this.numeroBiglietti = numeroBiglietti;
        this.dataPrenotazione = dataPrenotazione;
        this.proiezioneId = proiezioneId;
        this.utenteId = utenteId;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>cinemapp.prenotazione.id</code>.
     */
    public Prenotazione setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.numero_biglietti</code>.
     */
    @Column(name = "numero_biglietti", nullable = false)
    @NotNull
    public Integer getNumeroBiglietti() {
        return this.numeroBiglietti;
    }

    /**
     * Setter for <code>cinemapp.prenotazione.numero_biglietti</code>.
     */
    public Prenotazione setNumeroBiglietti(Integer numeroBiglietti) {
        this.numeroBiglietti = numeroBiglietti;
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.data_prenotazione</code>.
     */
    @Column(name = "data_prenotazione")
    public LocalDate getDataPrenotazione() {
        return this.dataPrenotazione;
    }

    /**
     * Setter for <code>cinemapp.prenotazione.data_prenotazione</code>.
     */
    public Prenotazione setDataPrenotazione(LocalDate dataPrenotazione) {
        this.dataPrenotazione = dataPrenotazione;
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.proiezione_id</code>.
     */
    @Column(name = "proiezione_id")
    public Long getProiezioneId() {
        return this.proiezioneId;
    }

    /**
     * Setter for <code>cinemapp.prenotazione.proiezione_id</code>.
     */
    public Prenotazione setProiezioneId(Long proiezioneId) {
        this.proiezioneId = proiezioneId;
        return this;
    }

    /**
     * Getter for <code>cinemapp.prenotazione.utente_id</code>.
     */
    @Column(name = "utente_id")
    public Long getUtenteId() {
        return this.utenteId;
    }

    /**
     * Setter for <code>cinemapp.prenotazione.utente_id</code>.
     */
    public Prenotazione setUtenteId(Long utenteId) {
        this.utenteId = utenteId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Prenotazione other = (Prenotazione) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.numeroBiglietti == null) {
            if (other.numeroBiglietti != null)
                return false;
        }
        else if (!this.numeroBiglietti.equals(other.numeroBiglietti))
            return false;
        if (this.dataPrenotazione == null) {
            if (other.dataPrenotazione != null)
                return false;
        }
        else if (!this.dataPrenotazione.equals(other.dataPrenotazione))
            return false;
        if (this.proiezioneId == null) {
            if (other.proiezioneId != null)
                return false;
        }
        else if (!this.proiezioneId.equals(other.proiezioneId))
            return false;
        if (this.utenteId == null) {
            if (other.utenteId != null)
                return false;
        }
        else if (!this.utenteId.equals(other.utenteId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.numeroBiglietti == null) ? 0 : this.numeroBiglietti.hashCode());
        result = prime * result + ((this.dataPrenotazione == null) ? 0 : this.dataPrenotazione.hashCode());
        result = prime * result + ((this.proiezioneId == null) ? 0 : this.proiezioneId.hashCode());
        result = prime * result + ((this.utenteId == null) ? 0 : this.utenteId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Prenotazione (");

        sb.append(id);
        sb.append(", ").append(numeroBiglietti);
        sb.append(", ").append(dataPrenotazione);
        sb.append(", ").append(proiezioneId);
        sb.append(", ").append(utenteId);

        sb.append(")");
        return sb.toString();
    }
}
