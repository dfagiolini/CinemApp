/*
 * This file is generated by jOOQ.
 */
package me.fagiolini.cinemapp.db.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "cinema",
    schema = "cinemapp",
    uniqueConstraints = {
        @UniqueConstraint(name = "cinema_nome_indirizzo_key", columnNames = { "nome", "indirizzo" })
    }
)
public class Cinema implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String indirizzo;
    private String nome;
    private String telefono;

    public Cinema() {}

    public Cinema(Cinema value) {
        this.id = value.id;
        this.indirizzo = value.indirizzo;
        this.nome = value.nome;
        this.telefono = value.telefono;
    }

    public Cinema(
        Long id,
        String indirizzo,
        String nome,
        String telefono
    ) {
        this.id = id;
        this.indirizzo = indirizzo;
        this.nome = nome;
        this.telefono = telefono;
    }

    /**
     * Getter for <code>cinemapp.cinema.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>cinemapp.cinema.id</code>.
     */
    public Cinema setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>cinemapp.cinema.indirizzo</code>.
     */
    @Column(name = "indirizzo", length = 255)
    @Size(max = 255)
    public String getIndirizzo() {
        return this.indirizzo;
    }

    /**
     * Setter for <code>cinemapp.cinema.indirizzo</code>.
     */
    public Cinema setIndirizzo(String indirizzo) {
        this.indirizzo = indirizzo;
        return this;
    }

    /**
     * Getter for <code>cinemapp.cinema.nome</code>.
     */
    @Column(name = "nome", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getNome() {
        return this.nome;
    }

    /**
     * Setter for <code>cinemapp.cinema.nome</code>.
     */
    public Cinema setNome(String nome) {
        this.nome = nome;
        return this;
    }

    /**
     * Getter for <code>cinemapp.cinema.telefono</code>.
     */
    @Column(name = "telefono", length = 255)
    @Size(max = 255)
    public String getTelefono() {
        return this.telefono;
    }

    /**
     * Setter for <code>cinemapp.cinema.telefono</code>.
     */
    public Cinema setTelefono(String telefono) {
        this.telefono = telefono;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Cinema other = (Cinema) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.indirizzo == null) {
            if (other.indirizzo != null)
                return false;
        }
        else if (!this.indirizzo.equals(other.indirizzo))
            return false;
        if (this.nome == null) {
            if (other.nome != null)
                return false;
        }
        else if (!this.nome.equals(other.nome))
            return false;
        if (this.telefono == null) {
            if (other.telefono != null)
                return false;
        }
        else if (!this.telefono.equals(other.telefono))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.indirizzo == null) ? 0 : this.indirizzo.hashCode());
        result = prime * result + ((this.nome == null) ? 0 : this.nome.hashCode());
        result = prime * result + ((this.telefono == null) ? 0 : this.telefono.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Cinema (");

        sb.append(id);
        sb.append(", ").append(indirizzo);
        sb.append(", ").append(nome);
        sb.append(", ").append(telefono);

        sb.append(")");
        return sb.toString();
    }
}
