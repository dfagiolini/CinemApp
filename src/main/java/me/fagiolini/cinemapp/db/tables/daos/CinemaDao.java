/*
 * This file is generated by jOOQ.
 */
package me.fagiolini.cinemapp.db.tables.daos;


import java.util.List;
import java.util.Optional;

import me.fagiolini.cinemapp.db.tables.Cinema;
import me.fagiolini.cinemapp.db.tables.records.CinemaRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CinemaDao extends DAOImpl<CinemaRecord, me.fagiolini.cinemapp.db.tables.pojos.Cinema, Long> {

    /**
     * Create a new CinemaDao without any configuration
     */
    public CinemaDao() {
        super(Cinema.CINEMA, me.fagiolini.cinemapp.db.tables.pojos.Cinema.class);
    }

    /**
     * Create a new CinemaDao with an attached configuration
     */
    public CinemaDao(Configuration configuration) {
        super(Cinema.CINEMA, me.fagiolini.cinemapp.db.tables.pojos.Cinema.class, configuration);
    }

    @Override
    public Long getId(me.fagiolini.cinemapp.db.tables.pojos.Cinema object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Cinema.CINEMA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchById(Long... values) {
        return fetch(Cinema.CINEMA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.fagiolini.cinemapp.db.tables.pojos.Cinema fetchOneById(Long value) {
        return fetchOne(Cinema.CINEMA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchOptionalById(Long value) {
        return fetchOptional(Cinema.CINEMA.ID, value);
    }

    /**
     * Fetch records that have <code>indirizzo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchRangeOfIndirizzo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cinema.CINEMA.INDIRIZZO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>indirizzo IN (values)</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchByIndirizzo(String... values) {
        return fetch(Cinema.CINEMA.INDIRIZZO, values);
    }

    /**
     * Fetch records that have <code>nome BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchRangeOfNome(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cinema.CINEMA.NOME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nome IN (values)</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchByNome(String... values) {
        return fetch(Cinema.CINEMA.NOME, values);
    }

    /**
     * Fetch records that have <code>telefono BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchRangeOfTelefono(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cinema.CINEMA.TELEFONO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefono IN (values)</code>
     */
    public List<me.fagiolini.cinemapp.db.tables.pojos.Cinema> fetchByTelefono(String... values) {
        return fetch(Cinema.CINEMA.TELEFONO, values);
    }
}
